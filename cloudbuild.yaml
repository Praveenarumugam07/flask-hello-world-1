# cloudbuild.yaml

substitutions:
  _ZONE: asia-south1-a
  _INSTANCE_TEMPLATE_NAME: flask-template
  _MIG_NAME: flask-mig
  _PROJECT_ID: $PROJECT_ID

steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: Build Image
    args:
      [
        'build',
        '-t',
        'gcr.io/$PROJECT_ID/flask-hello-world:$SHORT_SHA',
        '.'
      ]

  # Step 2: Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: Push Image
    args:
      [
        'push',
        'gcr.io/$PROJECT_ID/flask-hello-world:$SHORT_SHA'
      ]

  # Step 3: Create instance template with container image
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Create Instance Template
    args:
      [
        'compute',
        'instance-templates',
        'create-with-container',
        '${_INSTANCE_TEMPLATE_NAME}-${SHORT_SHA}',
        '--machine-type=e2-micro',
        '--container-image=gcr.io/$PROJECT_ID/flask-hello-world:$SHORT_SHA',
        '--container-restart-policy=always'
      ]

  # Step 4: Check if MIG exists
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Check MIG
    entrypoint: 'bash'
    args:
      [
        '-c',
        'gcloud compute instance-groups managed describe ${_MIG_NAME} --zone=${_ZONE} || echo "MIG_NOT_FOUND"'
      ]

  # Step 5: Create MIG if not exists
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Create MIG if not exists
    entrypoint: 'bash'
    args:
      [
        '-c',
        'if ! gcloud compute instance-groups managed describe ${_MIG_NAME} --zone=${_ZONE}; then
          gcloud compute instance-groups managed create ${_MIG_NAME}
            --base-instance-name=flask-instance
            --template=${_INSTANCE_TEMPLATE_NAME}-${SHORT_SHA}
            --size=1
            --zone=${_ZONE};
        fi'
      ]

  # Step 6: Update MIG instance template
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Update MIG template
    args:
      [
        'compute',
        'instance-groups',
        'managed',
        'set-instance-template',
        '${_MIG_NAME}',
        '--zone=${_ZONE}',
        '--template=${_INSTANCE_TEMPLATE_NAME}-${SHORT_SHA}'
      ]

  # Step 7: Start rolling update
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Rolling Update MIG
    args:
      [
        'compute',
        'instance-groups',
        'managed',
        'rolling-action',
        'start-update',
        '${_MIG_NAME}',
        '--zone=${_ZONE}',
        '--version=template=${_INSTANCE_TEMPLATE_NAME}-${SHORT_SHA}',
        '--max-surge=1',
        '--max-unavailable=0'
      ]

images:
  - 'gcr.io/$PROJECT_ID/flask-hello-world:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
