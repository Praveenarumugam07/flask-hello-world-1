# cloudbuild.yaml

substitutions:
  _REGION: asia-south1
  _INSTANCE_TEMPLATE_NAME: flask-template
  _MIG_NAME: flask-mig
  _PROJECT_ID: $PROJECT_ID

steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'gcr.io/$PROJECT_ID/flask-hello-world:$SHORT_SHA',
        '.'
      ]

  # Step 2: Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'gcr.io/$PROJECT_ID/flask-hello-world:$SHORT_SHA'
      ]

  # Step 3: Create new instance template with updated image
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'compute',
        'instance-templates',
        'create',
        '${_INSTANCE_TEMPLATE_NAME}-${SHORT_SHA}',
        '--region=${_REGION}',
        '--machine-type=e2-micro',
        '--container-image=gcr.io/$PROJECT_ID/flask-hello-world:$SHORT_SHA',
        '--container-restart-policy=always'
      ]

  # Step 4: Rolling update on MIG to use new template
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'compute',
        'instance-groups',
        'managed',
        'rolling-action',
        'replace',
        '${_MIG_NAME}',
        '--region=${_REGION}',
        '--version=template=${_INSTANCE_TEMPLATE_NAME}-${SHORT_SHA}',
        '--max-surge=1',
        '--max-unavailable=0'
      ]

images:
  - 'gcr.io/$PROJECT_ID/flask-hello-world:$SHORT_SHA'


options:
  logging: CLOUD_LOGGING_ONLY
